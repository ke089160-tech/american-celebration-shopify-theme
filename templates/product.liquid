{% comment %}
  Product page template
{% endcomment %}

<div class="page-width page-content">
  <div class="product-page">
    <div class="product-media">
      {% if product.featured_media %}
        <div class="product-image">
          <img src="{{ product.featured_media | image_url: width: 800 }}" 
               alt="{{ product.featured_media.alt | escape }}" 
               width="800" 
               height="{{ 800 | divided_by: product.featured_media.aspect_ratio | round }}">
        </div>
      {% endif %}
      
      {% if product.media.size > 1 %}
        <div class="product-thumbnails">
          {% for media in product.media limit: 5 %}
            <button class="thumbnail {% if forloop.first %}active{% endif %}" 
                    onclick="updateMainImage('{{ media | image_url: width: 800 }}')">
              <img src="{{ media | image_url: width: 100 }}" 
                   alt="{{ media.alt | escape }}" 
                   width="100" 
                   height="{{ 100 | divided_by: media.aspect_ratio | round }}">
            </button>
          {% endfor %}
        </div>
      {% endif %}
    </div>
    
    <div class="product-info">
      <div class="product-details">
        <h1 class="product-title">{{ product.title }}</h1>
        
        <div class="product-price">
          {% if product.compare_at_price > product.price %}
            <span class="price-compare">${{ product.compare_at_price | money_without_currency }}</span>
          {% endif %}
          <span class="price-current">${{ product.price | money_without_currency }}</span>
          {% if product.compare_at_price > product.price %}
            <span class="price-save">Save ${{ product.compare_at_price | minus: product.price | money_without_currency }}</span>
          {% endif %}
        </div>
        
        {% if product.description != blank %}
          <div class="product-description">
            {{ product.description }}
          </div>
        {% endif %}
        
        <form action="{{ routes.cart_add_url }}" method="post" enctype="multipart/form-data" id="product-form-{{ product.id }}">
          {% unless product.has_only_default_variant %}
            <div class="product-variants">
              {% for option in product.options_with_values %}
                <div class="variant-option">
                  <label for="Option{{ forloop.index }}">{{ option.name }}</label>
                  <select id="Option{{ forloop.index }}" name="id" class="variant-select">
                    {% for value in option.values %}
                      <option value="{{ value | escape }}" 
                              {% if option.selected_value == value %}selected="selected"{% endif %}>
                        {{ value }}
                      </option>
                    {% endfor %}
                  </select>
                </div>
              {% endfor %}
            </div>
          {% endunless %}
          
          <div class="product-quantity">
            <label for="Quantity">Quantity</label>
            <div class="quantity-selector">
              <button type="button" class="quantity-btn" onclick="changeQuantity(-1)">-</button>
              <input type="number" id="Quantity" name="quantity" value="1" min="1" class="quantity-input">
              <button type="button" class="quantity-btn" onclick="changeQuantity(1)">+</button>
            </div>
          </div>
          
          <div class="product-actions">
            <button type="submit" 
                    name="add" 
                    class="btn btn-primary btn-add-to-cart" 
                    {% unless product.available %}disabled{% endunless %}>
              {% if product.available %}
                Add to Cart - ${{ product.price | money_without_currency }}
              {% else %}
                Sold Out
              {% endif %}
            </button>
            
            {% if shop.customer_accounts_enabled %}
              <button type="button" class="btn btn-secondary wishlist-btn" onclick="toggleWishlist({{ product.id }})">
                <span class="wishlist-icon">â™¡</span> Add to Wishlist
              </button>
            {% endif %}
          </div>
          
          <input type="hidden" name="product-id" value="{{ product.id }}">
          {% unless product.has_only_default_variant %}
            <script>
              // Handle variant selection
              document.querySelectorAll('.variant-select').forEach(select => {
                select.addEventListener('change', function() {
                  updateVariant();
                });
              });
              
              function updateVariant() {
                const selectedOptions = [];
                document.querySelectorAll('.variant-select').forEach(select => {
                  selectedOptions.push(select.value);
                });
                
                const variant = {{ product.variants | json }}.find(v => {
                  return selectedOptions.every((option, index) => {
                    return v.options[index] === option;
                  });
                });
                
                if (variant) {
                  document.querySelector('input[name="id"]').value = variant.id;
                  document.querySelector('.price-current').textContent = '$' + (variant.price / 100).toFixed(2);
                  
                  const addToCartBtn = document.querySelector('.btn-add-to-cart');
                  if (variant.available) {
                    addToCartBtn.disabled = false;
                    addToCartBtn.textContent = 'Add to Cart - $' + (variant.price / 100).toFixed(2);
                  } else {
                    addToCartBtn.disabled = true;
                    addToCartBtn.textContent = 'Sold Out';
                  }
                }
              }
            </script>
          {% endunless %}
        </form>
        
        <div class="product-features">
          <div class="feature">
            <span class="feature-icon">ðŸŽ¥</span>
            <span class="feature-text">Professional Video Production</span>
          </div>
          <div class="feature">
            <span class="feature-icon">ðŸ‡ºðŸ‡¸</span>
            <span class="feature-text">Proudly Made in USA</span>
          </div>
          <div class="feature">
            <span class="feature-icon">âš¡</span>
            <span class="feature-text">Fast Delivery</span>
          </div>
          <div class="feature">
            <span class="feature-icon">âœ¨</span>
            <span class="feature-text">Premium Quality</span>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  {% if product.content != blank %}
    <div class="product-content">
      <h2>Product Details</h2>
      {{ product.content }}
    </div>
  {% endif %}
  
  <div class="related-products">
    {% assign related_products = collections[product.type].products | where: 'available' | limit: 4 %}
    {% if related_products.size > 1 %}
      <h2>You Might Also Like</h2>
      <div class="product-grid">
        {% for related_product in related_products %}
          {% unless related_product.id == product.id %}
            {% render 'product-card', product: related_product %}
          {% endunless %}
        {% endfor %}
      </div>
    {% endif %}
  </div>
</div>

<script>
  function updateMainImage(src) {
    document.querySelector('.product-image img').src = src;
    document.querySelectorAll('.thumbnail').forEach(thumb => thumb.classList.remove('active'));
    event.currentTarget.classList.add('active');
  }
  
  function changeQuantity(change) {
    const input = document.getElementById('Quantity');
    const currentValue = parseInt(input.value);
    const newValue = Math.max(1, currentValue + change);
    input.value = newValue;
  }
  
  function toggleWishlist(productId) {
    // Wishlist functionality would be implemented here
    console.log('Toggle wishlist for product:', productId);
  }
  
  // Handle add to cart form submission
  document.getElementById('product-form-{{ product.id }}').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    
    fetch(window.routes.cart_add_url, {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.status) {
        alert('Error: ' + data.message);
      } else {
        // Update cart counter
        updateCartCount();
        alert('Product added to cart!');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error adding product to cart');
    });
  });
  
  function updateCartCount() {
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        const cartCount = document.querySelector('.cart-count');
        if (cartCount) {
          cartCount.textContent = cart.item_count;
        }
      });
  }
</script>

<style>
  .product-page {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    margin: 2rem 0;
  }
  
  .product-media {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .product-image img {
    width: 100%;
    height: auto;
    border-radius: 8px;
  }
  
  .product-thumbnails {
    display: flex;
    gap: 0.5rem;
  }
  
  .thumbnail {
    border: 2px solid transparent;
    border-radius: 4px;
    cursor: pointer;
    background: none;
    padding: 0;
  }
  
  .thumbnail.active {
    border-color: #d32f2f;
  }
  
  .thumbnail img {
    display: block;
    border-radius: 4px;
  }
  
  .product-title {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #1a1a1a;
  }
  
  .product-price {
    margin-bottom: 1.5rem;
  }
  
  .price-current {
    font-size: 2rem;
    font-weight: bold;
    color: #d32f2f;
  }
  
  .price-compare {
    text-decoration: line-through;
    color: #666;
    margin-right: 1rem;
  }
  
  .price-save {
    color: #2e7d32;
    font-weight: bold;
    margin-left: 1rem;
  }
  
  .product-description {
    margin-bottom: 2rem;
    line-height: 1.6;
  }
  
  .variant-option {
    margin-bottom: 1rem;
  }
  
  .variant-option label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 600;
  }
  
  .variant-select {
    width: 100%;
    padding: 0.75rem;
    border: 2px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
  }
  
  .product-quantity {
    margin: 1.5rem 0;
  }
  
  .quantity-selector {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-top: 0.5rem;
  }
  
  .quantity-btn {
    width: 40px;
    height: 40px;
    border: 2px solid #ddd;
    background: white;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1.2rem;
    font-weight: bold;
  }
  
  .quantity-input {
    width: 80px;
    height: 40px;
    border: 2px solid #ddd;
    border-radius: 4px;
    text-align: center;
    font-size: 1rem;
  }
  
  .product-actions {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 2rem 0;
  }
  
  .btn {
    padding: 1rem 2rem;
    border: none;
    border-radius: 4px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    text-transform: uppercase;
    transition: all 0.3s ease;
  }
  
  .btn-primary {
    background: linear-gradient(135deg, #d32f2f, #c62828);
    color: white;
  }
  
  .btn-primary:hover {
    background: linear-gradient(135deg, #c62828, #b71c1c);
    transform: translateY(-2px);
  }
  
  .btn-secondary {
    background: white;
    color: #d32f2f;
    border: 2px solid #d32f2f;
  }
  
  .btn-secondary:hover {
    background: #d32f2f;
    color: white;
  }
  
  .product-features {
    margin-top: 2rem;
    padding-top: 2rem;
    border-top: 1px solid #eee;
  }
  
  .feature {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }
  
  .feature-icon {
    font-size: 1.5rem;
  }
  
  .related-products {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid #eee;
  }
  
  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }
  
  @media (max-width: 768px) {
    .product-page {
      grid-template-columns: 1fr;
      gap: 2rem;
    }
    
    .product-title {
      font-size: 2rem;
    }
    
    .price-current {
      font-size: 1.5rem;
    }
  }
</style>